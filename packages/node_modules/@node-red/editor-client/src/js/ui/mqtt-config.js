RED.mqttConfig = (function() {
    var dialog;
    var dialogBody;

    function showMqttConfigDialog() {
        if (!dialog) {
            dialog = $('<div id="mqtt-config-dialog" class="hide node-red-dialog"></div>')
                .appendTo("body")
                .dialog({
                    modal: true,
                    autoOpen: false,
                    width: 500,
                    title: "Global MQTT Configuration",
                    buttons: [
                        {
                            text: "Save",
                            click: function() {
                                saveMqttConfig();
                            }
                        },
                        {
                            text: "Cancel",
                            click: function() {
                                $(this).dialog("close");
                            }
                        }
                    ]
                });

            dialogBody = $('<div class="mqtt-config-dialog-body"></div>').appendTo(dialog);
            var form = $('<form class="form-horizontal"></form>').appendTo(dialogBody);

            var brokerRow = $('<div class="form-row"></div>').appendTo(form);
            $('<label for="node-config-input-broker">Broker</label>').appendTo(brokerRow);
            $('<input type="text" id="node-config-input-broker" placeholder="localhost">').appendTo(brokerRow);

            var portRow = $('<div class="form-row"></div>').appendTo(form);
            $('<label for="node-config-input-port">Port</label>').appendTo(portRow);
            $('<input type="text" id="node-config-input-port" placeholder="1883">').appendTo(portRow);
        }

        // Load current config
        $.getJSON("settings/global-mqtt")
            .done(function(data) {
                $("#node-config-input-broker").val(data.broker || "localhost");
                $("#node-config-input-port").val(data.port || "1883");
                dialog.dialog("open");
            })
            .fail(function(jqXHR, textStatus, errorThrown) {
                console.error("Failed to load MQTT config:", textStatus, errorThrown);
                RED.notify("Failed to load MQTT configuration", "error");
            });
        
        // 
        
    }

    function saveMqttConfig() {
        var config = {
            broker: $("#node-config-input-broker").val() || "localhost",
            port: $("#node-config-input-port").val() || "1883"
        };

        $.ajax({
            url: "settings/global-mqtt",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(config),
            success: function(response) {
                dialog.dialog("close");
                RED.notify("MQTT configuration saved", "success");
            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.error("Failed to save MQTT config:", textStatus, errorThrown);
                RED.notify("Failed to save MQTT configuration: " + (jqXHR.responseJSON?.message || errorThrown), "error");
            }
        });
    }

    // Register the menu action
    RED.actions.add("core:show-mqtt-config", showMqttConfigDialog);

    return {
        show: showMqttConfigDialog
    };
})(); 