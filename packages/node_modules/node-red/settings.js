const path = require('path');
const fs = require('fs');
const { icon } = require('@node-red/editor-api/lib/editor/ui');

module.exports = {
    flowFile: 'flows.json',
    flowFilePretty: true,
    uiPort: process.env.PORT || 1880,
    diagnostics: {
        enabled: true,
        ui: true,
    },

    runtimeState: {
        enabled: false,
        ui: false,
    },

    userDir: process.cwd(),

    logging: {

        console: {

            level: "info",

            metrics: false,

            audit: false
        }
    },


    exportGlobalContextKeys: false,

    externalModules: {

    },


    editorTheme: {
        header: {
            title: "Health-sutra",
            image: path.join(process.cwd() ,'public','ICON.svg')
        },
        palette: {

            categories: false,

            filter: {

                filteredNodes: [
                    "worldmap",
                    "worldmap in",
                    "worldmap-tracks",
                    "worldmap-hull",
                    // "inject", 
                    "debug", 
                    "function",
                    "csv",
                    "html",
                    "json",
                    "xml",
                    "yaml",
                    "split",
                    "join",
                    "sort",
                    "batch",
                    "file",
                    "file in",
                    "watch",
                    "ui_button",
                    "ui_dropdown",
                    "ui_switch",
                    "ui_slider",
                    "ui_numeric",
                    "ui_text_input",
                    "ui_date_picker",
                    "ui_colour_picker",
                    "ui_form",
                    "ui_text",
                    "ui_gauge",
                    "ui_chart",
                    "ui_audio",
                    "ui_toast",
                    "ui_ui_control",
                    "ui_template",
                    "e-mail",
                    "e-mail in",
                    "e-mail mta",
                    "ui_worldmap",
                    "complete",
                    "catch",
                    "status",
                    "link in",
                    "link call",
                    "link call",
                    "link out",
                    "comment",
                    "conditional-edge",
                    "switch",
                    "change",
                    "range",
                    "template",
                    "delay",
                    "trigger",
                    "exec",
                    "rbe",
                    "mqtt in",
                    "mqtt out",
                    "http in",
                    "http response",
                    "http request",
                    "websocket in",
                    "websocket out",
                    "tcp in",
                    "tcp out",
                    "tcp request",
                    "udp in",
                    "udp out",
                    "aedes broker",
                    "google"
                ],


                filteredCategories: [

                ]
            }
        },

        projects: {
            enabled: false,
            workflow: {

                mode: "manual"
            }
        },

        codeEditor: {
            lib: "monaco",
            options: {

            }
        },

        markdownEditor: {
            mermaid: {

                enabled: true
            }
        },

        multiplayer: {
            enabled: false
        },

        page: {
            css: require('path').join(__dirname, "red/custom.css")
        }
    },

    functionExternalModules: true,

    functionTimeout: 0,

    functionGlobalContext: {
        // os:require('os'),
        // jfive:require("johnny-five"),
        // j5board:require("johnny-five").Board({repl:false})
    },

    debugMaxLength: 1000,

    mqttReconnectTime: 15000,

    serialReconnectTime: 15000,

    // Configure the static file serving for public directory
    httpStatic: path.join(__dirname, '../../../public'),

    // Admin API root
    httpAdminRoot: '/',
    
    // Simple middleware for CORS (useful for API requests)
    httpNodeMiddleware: function(req, res, next) {
        // Set CORS headers for API requests
        if (req.url.indexOf('/api/') === 0) {
            res.setHeader('Access-Control-Allow-Origin', '*');
            res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');
            res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
        }
        next();
    }
}